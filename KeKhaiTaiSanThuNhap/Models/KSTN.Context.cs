//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KeKhaiTaiSanThuNhap.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class KSTNEntities : DbContext
    {
        public KSTNEntities()
            : base("name=KSTNEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<DM_CanBo> DM_CanBo { get; set; }
        public virtual DbSet<DM_CanBo_ThanNhan> DM_CanBo_ThanNhan { get; set; }
        public virtual DbSet<DM_ChucVu_ChucDanh> DM_ChucVu_ChucDanh { get; set; }
        public virtual DbSet<DM_CoQuanDonVi> DM_CoQuanDonVi { get; set; }
        public virtual DbSet<DM_Loai_CoQuan_DonVi> DM_Loai_CoQuan_DonVi { get; set; }
        public virtual DbSet<DM_Loai_KeKhai> DM_Loai_KeKhai { get; set; }
        public virtual DbSet<DM_TienDo> DM_TienDo { get; set; }
        public virtual DbSet<HT_ChiTietPhanQuyen> HT_ChiTietPhanQuyen { get; set; }
        public virtual DbSet<HT_ChucNang> HT_ChucNang { get; set; }
        public virtual DbSet<HT_DanhSachMenu> HT_DanhSachMenu { get; set; }
        public virtual DbSet<HT_Menu> HT_Menu { get; set; }
        public virtual DbSet<HT_NhomTaiKhoan> HT_NhomTaiKhoan { get; set; }
        public virtual DbSet<HT_PQCN> HT_PQCN { get; set; }
        public virtual DbSet<HT_TaiKhoan> HT_TaiKhoan { get; set; }
        public virtual DbSet<HT_ThongBao> HT_ThongBao { get; set; }
        public virtual DbSet<NV_BaoCaoTienDo> NV_BaoCaoTienDo { get; set; }
        public virtual DbSet<NV_CapTaiKhoan> NV_CapTaiKhoan { get; set; }
        public virtual DbSet<NV_CapTaiKhoan_ChiTiet> NV_CapTaiKhoan_ChiTiet { get; set; }
        public virtual DbSet<NV_KeKhai_BienDongTaiSan> NV_KeKhai_BienDongTaiSan { get; set; }
        public virtual DbSet<NV_KeKhai_CongTrinh> NV_KeKhai_CongTrinh { get; set; }
        public virtual DbSet<NV_KeKhai_NhaO> NV_KeKhai_NhaO { get; set; }
        public virtual DbSet<NV_KeKhai_QuyenSuDungDat> NV_KeKhai_QuyenSuDungDat { get; set; }
        public virtual DbSet<NV_KeKhai_TaiKhoanNuocNgoai> NV_KeKhai_TaiKhoanNuocNgoai { get; set; }
        public virtual DbSet<NV_KeKhai_TaiSanGanVoiDat> NV_KeKhai_TaiSanGanVoiDat { get; set; }
        public virtual DbSet<NV_KeKhai_TaiSanKhac> NV_KeKhai_TaiSanKhac { get; set; }
        public virtual DbSet<NV_KeKhai_TaiSanNuocNgoai> NV_KeKhai_TaiSanNuocNgoai { get; set; }
        public virtual DbSet<NV_KeKhai_TaiSanNuocNgoai_CongTrinh> NV_KeKhai_TaiSanNuocNgoai_CongTrinh { get; set; }
        public virtual DbSet<NV_KeKhai_TaiSanNuocNgoai_NhaO> NV_KeKhai_TaiSanNuocNgoai_NhaO { get; set; }
        public virtual DbSet<NV_KeKhai_TaiSanNuocNgoai_QuyenSuDungDat> NV_KeKhai_TaiSanNuocNgoai_QuyenSuDungDat { get; set; }
        public virtual DbSet<NV_KeKhai_TaiSanNuocNgoai_TaiSanGanVoiDat> NV_KeKhai_TaiSanNuocNgoai_TaiSanGanVoiDat { get; set; }
        public virtual DbSet<NV_KeKhai_TaiSanNuocNgoai_TaiSanKhac> NV_KeKhai_TaiSanNuocNgoai_TaiSanKhac { get; set; }
        public virtual DbSet<NV_KeKhai_TaiSanNuocNgoai_TaiSanPhieu> NV_KeKhai_TaiSanNuocNgoai_TaiSanPhieu { get; set; }
        public virtual DbSet<NV_KeKhai_TaiSanNuocNgoai_TaiSanTrangSuc> NV_KeKhai_TaiSanNuocNgoai_TaiSanTrangSuc { get; set; }
        public virtual DbSet<NV_KeKhai_TaiSanNuocNgoai_Tien> NV_KeKhai_TaiSanNuocNgoai_Tien { get; set; }
        public virtual DbSet<NV_KeKhai_TaiSanPhieu> NV_KeKhai_TaiSanPhieu { get; set; }
        public virtual DbSet<NV_KeKhai_TaiSanTrangSuc> NV_KeKhai_TaiSanTrangSuc { get; set; }
        public virtual DbSet<NV_KeKhai_Tien> NV_KeKhai_Tien { get; set; }
        public virtual DbSet<NV_KeKhai_TongThuNhap> NV_KeKhai_TongThuNhap { get; set; }
        public virtual DbSet<Nv_KeKhai_TSTN> Nv_KeKhai_TSTN { get; set; }
        public virtual DbSet<NV_KeKhai_TSTN_CanBoThanNhan> NV_KeKhai_TSTN_CanBoThanNhan { get; set; }
        public virtual DbSet<NV_LapKeHoachKeKhai> NV_LapKeHoachKeKhai { get; set; }
        public virtual DbSet<NV_LapKeHoachKeKhai_DanhSachKeKhaiBoNhiemCongTacCanBo> NV_LapKeHoachKeKhai_DanhSachKeKhaiBoNhiemCongTacCanBo { get; set; }
        public virtual DbSet<NV_LapKeHoachKeKhai_DanhSachKeKhaiBoNhiemCongTacCanBo_ChiTiet> NV_LapKeHoachKeKhai_DanhSachKeKhaiBoNhiemCongTacCanBo_ChiTiet { get; set; }
        public virtual DbSet<NV_LapKeHoachKeKhai_DanhSachKeKhaiBoSung> NV_LapKeHoachKeKhai_DanhSachKeKhaiBoSung { get; set; }
        public virtual DbSet<NV_LapKeHoachKeKhai_DanhSachKeKhaiBoSung_ChiTiet> NV_LapKeHoachKeKhai_DanhSachKeKhaiBoSung_ChiTiet { get; set; }
        public virtual DbSet<NV_LapKeHoachKeKhai_DanhSachKeKhaiHangNam> NV_LapKeHoachKeKhai_DanhSachKeKhaiHangNam { get; set; }
        public virtual DbSet<NV_LapKeHoachKeKhai_DanhSachKeKhaiHangNam_ChiTiet> NV_LapKeHoachKeKhai_DanhSachKeKhaiHangNam_ChiTiet { get; set; }
        public virtual DbSet<NV_LapKeHoachKeKhai_DanhSachKeKhaiLanDau> NV_LapKeHoachKeKhai_DanhSachKeKhaiLanDau { get; set; }
        public virtual DbSet<NV_LapKeHoachKeKhai_DanhSachKeKhaiLanDau_ChiTiet> NV_LapKeHoachKeKhai_DanhSachKeKhaiLanDau_ChiTiet { get; set; }
        public virtual DbSet<NV_LapKeHoachXacMinh> NV_LapKeHoachXacMinh { get; set; }
        public virtual DbSet<NV_LapKeHoachXacMinh_BaoCaoKetQuaXacMinh> NV_LapKeHoachXacMinh_BaoCaoKetQuaXacMinh { get; set; }
        public virtual DbSet<NV_LapKeHoachXacMinh_DanhSachCanBoXacMinh> NV_LapKeHoachXacMinh_DanhSachCanBoXacMinh { get; set; }
        public virtual DbSet<NV_LapKeHoachXacMinh_DanhSachCanBoXacMinh_ChiTiet> NV_LapKeHoachXacMinh_DanhSachCanBoXacMinh_ChiTiet { get; set; }
        public virtual DbSet<NV_LapKeHoachXacMinh_GiaiTrinhTaiSanThuNhap> NV_LapKeHoachXacMinh_GiaiTrinhTaiSanThuNhap { get; set; }
        public virtual DbSet<NV_LapKeHoachXacMinh_GuiVaCongKhaiKetLuanXacMinh> NV_LapKeHoachXacMinh_GuiVaCongKhaiKetLuanXacMinh { get; set; }
        public virtual DbSet<NV_LapKeHoachXacMinh_KetLuanXacMinh> NV_LapKeHoachXacMinh_KetLuanXacMinh { get; set; }
        public virtual DbSet<NV_LapKeHoachXacMinh_RaQuyetDinhXacMinh> NV_LapKeHoachXacMinh_RaQuyetDinhXacMinh { get; set; }
        public virtual DbSet<NV_LapKeHoachXacMinh_ThoiGianHoanThanh_TienDo> NV_LapKeHoachXacMinh_ThoiGianHoanThanh_TienDo { get; set; }
        public virtual DbSet<NV_LapKeHoachXacMinh_TienHanhXacMinh> NV_LapKeHoachXacMinh_TienHanhXacMinh { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int stp_DelKeKhaiTaiSan(Nullable<int> maKeKhai)
        {
            var maKeKhaiParameter = maKeKhai.HasValue ?
                new ObjectParameter("MaKeKhai", maKeKhai) :
                new ObjectParameter("MaKeKhai", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_DelKeKhaiTaiSan", maKeKhaiParameter);
        }
    }
}
